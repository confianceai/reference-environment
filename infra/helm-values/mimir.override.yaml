ingester:
  replicas: 3
  zoneAwareReplication:
    # -- Enable zone-aware replication for ingester
    enabled: false
  topologySpreadConstraints: {}

querier:
  replicas: 1

query_scheduler:
  replicas: 1

store_gateway:
  zoneAwareReplication:
    # -- Enable zone-aware replication for store-gateway
    enabled: false

minio:
  enabled: false

mimir:
  structuredConfig:
    common:
      storage:
        backend: s3
        s3:
          endpoint: "${BUCKET_HOST}:${BUCKET_PORT}"
          access_key_id: "${AWS_ACCESS_KEY_ID}" # This is a secret injected via an environment variable
          secret_access_key: "${AWS_SECRET_ACCESS_KEY}" # This is a secret injected via an environment variable
          http:
            insecure_skip_verify: true
    blocks_storage:
      s3:
        bucket_name: etf-mimir-blocks
    alertmanager_storage:
      s3:
        bucket_name: etf-mimir-alertmanager
    ruler_storage:
      s3:
        bucket_name: etf-mimir-ruler

# -- A reverse proxy deployment that is meant to receive traffic for Mimir or GEM.
# When enterprise.enabled is true the GEM gateway is deployed. Otherwise, it is an nginx.
# Options except those under gateway.nginx apply to both versions - nginx and GEM gateway.
gateway:
  # -- The gateway is deployed by default for enterprise installations (enterprise.enabled=true).
  # Toggle this to have it deployed for non-enterprise installations too.
  enabledNonEnterprise: true
