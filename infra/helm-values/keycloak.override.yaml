global:
  imagePullSecrets:
    - regcred
auth:
  ## @param auth.adminUser Keycloak administrator user
  ##
  adminUser: "${KC_ADMIN_USER}"
  ## @param auth.adminPassword Keycloak administrator password for the new user
  ##
  adminPassword: "${KC_ADMIN_PASSWORD}"

## @param adminRealm Name of the admin realm
##
adminRealm: "master"
## @param production Run Keycloak in production mode. TLS configuration is required except when using proxy=edge.
##
production: true
## @param proxyHeaders Set Keycloak proxy headers
## ref: https://www.keycloak.org/server/reverseproxy
##
proxyHeaders: ""
## @param proxy reverse Proxy mode edge, reencrypt, passthrough or none
## DEPRECATED: use proxyHeaders instead
## ref: https://www.keycloak.org/server/reverseproxy
##
proxy: "edge"

## Keycloak Service Discovery settings
## ref: https://github.com/bitnami/containers/tree/main/bitnami/keycloak#cluster-configuration
##
## @param configuration Keycloak Configuration. Auto-generated based on other parameters when not specified
## Specify content for keycloak.conf
## NOTE: This will override configuring Keycloak based on environment variables (including those set by the chart)
## The keycloak.conf is auto-generated based on other parameters when this parameter is not specified
##
## Example:
## configuration: |-
##    foo: bar
##    baz:
##

initdbScripts: {}
## @param initdbScriptsConfigMap ConfigMap with the initdb scripts (Note: Overrides `initdbScripts`)
##
initdbScriptsConfigMap: ""
## @param command Override default container command (useful when using custom images)
##
replicaCount: 2
## @param revisionHistoryLimitCount Number of controller revisions to keep
##

## @param resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
resources:
  requests:
    cpu: 500m
    memory: 1024Mi
  limits:
    cpu: 750m
    memory: 1536Mi

## @param hostAliases Deployment pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}

## Keycloak ingress parameters
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Keycloak
  ##
  enabled: true
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: "nginx"
  hostname: ${HOSTNAME}
  annotations:
    cert-manager.io/cluster-issuer: ${KC_CLUSTER_ISSUER}
  tls: true

## @section RBAC parameter
## Specifies whether a ServiceAccount should be created
##
serviceAccount:
  ## @param serviceAccount.create Enable the creation of a ServiceAccount for Keycloak pods
  ##
  create: true
  automountServiceAccountToken: true
## Specifies whether RBAC resources should be created
##
rbac:
  ## @param rbac.create Whether to create and use RBAC resources or not
  ##
  create: true

## @section Database parameters
## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` with key `postgres-password` is provided
## @param postgresql.auth.username Name for a custom user to create
## @param postgresql.auth.password Password for the custom user to create
## @param postgresql.auth.database Name for a custom database to create
## @param postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials
## @param postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
## @param postgresql.architecture PostgreSQL architecture (`standalone` or `replication`)
##
postgresql:
  enabled: true
  auth:
    postgresPassword: "${KC_PGSQL_POSTGRES_PASSWORD}"
    username: "${KC_PGSQL_USERNAME}"
    password: "${KC_PGSQL_PASSWORD}"
    database: bitnami_keycloak
    existingSecret: ""
    secretKeys:
      userPasswordKey: password
  architecture: standalone
