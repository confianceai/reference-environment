# -- Image pull secrets for Docker images
imagePullSecrets:
  - name: regcred
deploymentMode: SingleBinary

# -- Configuration for running Loki
# @default -- See values.yaml
loki:
  commonConfig:
    replication_factor: 1
  auth_enabled: false
  # -- Storage config. Providing this will automatically populate all necessary storage configs in the templated config.
  storage:
    # Loki requires a bucket for chunks and the ruler. GEL requires a third bucket for the admin API.
    # Please provide these values if you are using object storage.
    bucketNames:
      chunks: etf-loki-chunks
      ruler: etf-loki-ruler
      admin: etf-loki-admin
    type: s3
    s3:
      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name
      # s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name
      # AWS endpoint URL
      endpoint: "${BUCKET_HOST}"
      # AWS region where the S3 bucket is located
      region: "${BUCKET_REGION}"
      # AWS secret access key
      secretAccessKey: "${AWS_SECRET_ACCESS_KEY}"
      # AWS access key ID
      accessKeyId: "${AWS_ACCESS_KEY_ID}"
      # AWS signature version (e.g., v2 or v4)
      # signatureVersion: null
      # Forces the path style for S3 (true/false)
      s3ForcePathStyle: true
      # Allows insecure (HTTP) connections (true/false)
      insecure: false
      # HTTP configuration settings
      http_config:
        insecure_skip_verify: false
  # -- Check https://grafana.com/docs/loki/latest/configuration/#schema_config for more info on how to configure schemas
  schemaConfig:
    configs:
      - from: 2024-09-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  # -- a real Loki install requires a proper schemaConfig defined above this, however for testing or playing around
  # you can enable useTestSchema
  useTestSchema: false
  testSchemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: '{{ include "loki.testSchemaObjectStore" . }}'
        schema: v13
        index:
          prefix: index_
          period: 24h
  # --  Optional compactor configuration
  compactor: {}
  # --  Optional pattern ingester configuration
  pattern_ingester:
    enabled: false
  # --  Optional analytics configuration
  analytics: {}
  # --  Optional querier configuration
  query_range: {}
  # --  Optional querier configuration
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  # --  Optional ingester configuration
  ingester:
    chunk_encoding: snappy
  # --  Optional index gateway configuration
  index_gateway:
    mode: simple
  # -- Enable tracing
  tracing:
    enabled: true
  bloom_build:
    enabled: false
  bloom_gateway:
    enabled: false

######################################################################################################################
#
# Gateway and Ingress
#
# By default this chart will deploy a Nginx container to act as a gateway which handles routing of traffic
# and can also do auth.
#
# If you would prefer you can optionally disable this and enable using k8s ingress to do the incoming routing.
#
######################################################################################################################

# Configuration for the gateway
gateway:
  # -- Specifies whether the gateway should be enabled
  enabled: true
  # -- Number of replicas for the gateway
  replicas: 1
  # -- Default container port
  containerPort: 8080

enterprise:
  # Enable enterprise features, license must be provided
  enabled: false

# Enable minio for storage
minio:
  enabled: false

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

# Zero out replica counts of other deployment modes
singleBinary:
  replicas: 1

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0
