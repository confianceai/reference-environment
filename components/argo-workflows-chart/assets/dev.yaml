apiVersion: v1
kind: ServiceAccount
metadata:
  name: etf-argo-workflows-dev-user
  namespace: shared
  annotations:
    # The rule is an expression used to determine if this service account
    # should be used.
    # * `groups` - an array of the OIDC groups
    # * `iss` - the issuer ("argo-server")
    # * `sub` - the subject (typically the username)
    # Must evaluate to a boolean.
    # If you want an account to be the default to use, this rule can be "true".
    # Details of the expression language are available in
    # https://expr-lang.org/docs/language-definition.
    workflows.argoproj.io/rbac-rule: "'argo-dev' in groups"
    # The precedence is used to determine which service account to use when
    # Precedence is an integer. It may be negative. If omitted, it defaults to "0".
    # Numerically higher values have higher precedence (not lower, which maybe
    # counter-intuitive to you).
    # If two rules match and have the same precedence, then which one used will
    # be arbitrary.
    # workflows.argoproj.io/rbac-rule-precedence: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: etf-argo-workflows-dev
  namespace: shared
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: etf-argo-workflows-dev
  namespace: shared
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: etf-argo-workflows-dev
subjects:
  - kind: ServiceAccount
    name: etf-argo-workflows-dev-user
    namespace: shared
---
# https://argo-workflows.readthedocs.io/en/latest/service-account-secrets/
apiVersion: v1
kind: Secret
metadata:
  name: etf-argo-workflows-dev-user.service-account-token
  annotations:
    kubernetes.io/service-account.name: etf-argo-workflows-dev-user
  namespace: shared
type: kubernetes.io/service-account-token
