# This ClusterWorkflowTemplate is used to define a reusable workflow template for Argo Workflows.
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  # The 'generateName' field in metadata is used to generate a unique name for the workflow.
  generateName: bucket-credentials-
spec:
  # The 'entrypoint' field specifies the main template to execute when the workflow starts.
  entrypoint: main
  # The 'main' template contains a single step that executes the 'bucket-task' template.
  templates:
    - name: main
      steps:
        - - name: step1
            template: bucket-task

    # The 'bucket-task' template runs a container using the 'minio/mc' image to interact with a MinIO server.
    - name: bucket-task
      container:
        image: minio/mc
        # The 'command' and 'args' fields define the command to be executed in the container.
        command: [sh, -c]
        args:
          [
            "mc alias set myminio http://minio.minio:9000 $ACCESS_KEY $SECRET_KEY && mc ls myminio/mybucket",
          ]
      # The 'env' field sets environment variables for the container using values from a Kubernetes secret.
      env:
        # You need to create a secret called user-minio-credentials, having the ACCESS_KEY
        # and SECRET_KEY keys set to a MinIO service account credentials
        - name: ACCESS_KEY
          valueFrom:
            secretKeyRef:
              # Ensure that a Kubernetes secret named 'user-minio-credentials' exists with 'accesskey' and 'secretkey' keys.
              name: user-minio-credentials
              key: accesskey
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: user-minio-credentials
              key: secretkey
  # The 'serviceAccountName' field specifies the service account to be used for the workflow.
  serviceAccountName: etf-argo-workflows-dev-user
  # The 'namespace' field specifies the namespace in which the workflow will be executed.
  namespace: shared
